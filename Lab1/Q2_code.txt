ORG 0x0000  

	acall CONFIGURE_LCD
	
	MOV A, #'I'
	acall SEND_DATA
	MOV A, #'N'
	acall SEND_DATA
	MOV A, #'P'
	acall SEND_DATA
	MOV A, #'U'
	acall SEND_DATA
	MOV A, #'T'
	acall SEND_DATA
	MOV A, #':'
	acall SEND_DATA

	
	acall KEYBOARD
	acall send_data
	ANL A, #0FH
	MOV R3, A;

	acall KEYBOARD
	acall send_data
	ANL A, #0FH
	MOV R4, A;

	acall KEYBOARD
	acall send_data
	ANL A, #0FH
	MOV R5, A;
	
	MOV A, #0c0h ; this block goes to next line in LCD
	acall send_command
	MOV A, #'P'
	acall SEND_DATA
	MOV A, #':'
	acall SEND_DATA
	MOV A, #'('
	acall SEND_DATA
MOV A, R3
MOV B,#64H
MUL AB
MOV B,A
MOV A ,R4
PUSH B
MOV B,#0AH
MUL AB
POP B
ADD A,B
ADD A,R5
MOV R3, A
CLR A
MOV R7,#0
MOV DPTR, #300H
AGAIN:
CJNE R3, #1, CONT
SJMP FINISH
CONT:clr c
clr cy
MOV A, R7
MOVC A, @A+DPTR
MOV B, A
MOV A, R3
DIV AB
MOV R4, A ;R4= Quotient
MOV A,B
JNZ NOTDIVIDED
MOV A, R4
MOV R3,A
SJMP ENDED
NOTDIVIDED: 
INC R7
SJMP AGAIN
ENDED: CLR C
CJNE R7, #03H,NEXT
ONE_DIGIT: 
	PUSH A
	MOV A, R7
	MOVC A, @A+DPTR
	ORL A,#30H
	acall SEND_DATA
	MOV A,#','
	acall SEND_DATA
	POP A
	SJMP AGAIN
	
NEXT: JC ONE_DIGIT
CJNE R7, #18H, NEXT_2

TWO_DIGIT: 
	PUSH A
	MOV A, R7
	MOVC A, @A+DPTR
	MOV B,#10
	DIV AB
	ORL A,#30H
	ACALL SEND_DATA
	MOV A,B
	ORL A,#30H
	ACALL SEND_DATA
	MOV A,#','
	ACALL SEND_DATA
	POP A
	SJMP AGAIN

		
NEXT_2: JC TWO_DIGIT ;Three Digit
	PUSH A
	MOV A, R7
	MOVC A, @A+DPTR
	MOV B,#10
	DIV AB
	MOV R6,B
	MOV B,#10
	DIV AB
	ORL A,#30H
	ACALL SEND_DATA
	MOV A,B
	ORL A,#30H
	ACALL SEND_DATA
	MOV A,R6
	ORL A,#30H
	ACALL SEND_DATA
	MOV A,#','
	ACALL SEND_DATA
	POP A
	SJMP AGAIN

FINISH: 	MOV A, #')'
	acall SEND_DATA
FINAL: SJMP FINAL


PRINT:
PUSH A
MOV A , R6
ORL A, #0F0H
acall SEND_DATA
MOV A,#','
acall SEND_DATA
POP A
RET
CONFIGURE_LCD:	;THIS SUBROUTINE SENDS THE INITIALIZATION COMMANDS TO THE LCD
	mov a,#38H	;TWO LINES, 5X7 MATRIX
	acall SEND_COMMAND
	mov a,#0FH	;DISPLAY ON, CURSOR BLINKING
	acall SEND_COMMAND
	mov a,#06H	;INCREMENT CURSOR (SHIFT CURSOR TO RIGHT)
	acall SEND_COMMAND
	mov a,#01H	;CLEAR DISPLAY SCREEN
	acall SEND_COMMAND
	mov a,#80H	;FORCE CURSOR TO BEGINNING OF THE FIRST LINE
	acall SEND_COMMAND
	ret



SEND_COMMAND:
	mov p1,a		;THE COMMAND IS STORED IN A, SEND IT TO LCD
	clr p3.5		;RS=0 BEFORE SENDING COMMAND
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret


SEND_DATA:
	mov p1,a		;SEND THE DATA STORED IN A TO LCD
	setb p3.5	;RS=1 BEFORE SENDING DATA
	clr p3.6		;R/W=0 TO WRITE
	setb p3.7	;SEND A HIGH TO LOW SIGNAL TO ENABLE PIN
	acall DELAY
	clr p3.7
	ret


DELAY:
	push 0
	push 1
	mov r0,#50
DELAY_OUTER_LOOP:
	mov r1,#255
	djnz r1,$
	djnz r0,DELAY_OUTER_LOOP
	pop 1
	pop 0
	ret


KEYBOARD: ;takes the key pressed from the keyboard and puts it to A
	mov	P0, #0ffh	;makes P0 input
K1:
	mov	P2, #0	;ground all rows
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, K1
K2:
	acall	DELAY
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, KB_OVER
	sjmp	K2
KB_OVER:
	acall DELAY
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, KB_OVER1
	sjmp	K2
KB_OVER1:
	mov	P2, #11111110B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_0
	mov	P2, #11111101B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_1
	mov	P2, #11111011B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_2
	mov	P2, #11110111B
	mov	A, P0
	anl	A, #00001111B
	cjne	A, #00001111B, ROW_3
	ljmp	K2
	
ROW_0:
	mov	DPTR, #KCODE0
	sjmp	KB_FIND
ROW_1:
	mov	DPTR, #KCODE1
	sjmp	KB_FIND
ROW_2:
	mov	DPTR, #KCODE2
	sjmp	KB_FIND
ROW_3:
	mov	DPTR, #KCODE3
KB_FIND:
	rrc	A
	jnc	KB_MATCH
	inc	DPTR
	sjmp	KB_FIND
KB_MATCH:
	clr	A
	movc	A, @A+DPTR; get ASCII code from the table 
	ret

;ASCII look-up table 
KCODE0:	DB	'1', '2', '3', 'A'
KCODE1:	DB	'4', '5', '6', 'B'
KCODE2:	DB	'7', '8', '9', 'C'
KCODE3:	DB	'*', '0', '#', 'D'


ORG 300H
PRIMENUMBER:
DB  3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241,251
END

